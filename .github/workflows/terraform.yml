name: Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    # Все команды Terraform будут запускаться из этой директории
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v2

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.3

      - name: 'Set up Yandex Cloud service account key'
        id: get-key
        run: echo '${{ secrets.YC_KEY_JSON }}' > authorized_key.json

      - name: 'Terraform Init'
        id: init
        run: terraform init -backend-config="access_key=${{ secrets.ACCESS_KEY }}" -backend-config="secret_key=${{ secrets.SECRET_KEY }}"

      - name: 'Terraform Plan'
        id: plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan -no-color
        env:
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_key: ${{ secrets.SSH_PUBLIC_KEY }}

      - name: 'Terraform Apply'
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve -no-color
        env:
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_key: ${{ secrets.SSH_PUBLIC_KEY }}
          
      - name: 'Terraform Destroy'
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -no-color
        env:
          TF_VAR_cloud_id: ${{ secrets.YC_CLOUD_ID }}
          TF_VAR_folder_id: ${{ secrets.YC_FOLDER_ID }}
          TF_VAR_ssh_key: ${{ secrets.SSH_PUBLIC_KEY }}
